package hr.danisoka.bulkmailer.app.views.windows.dialogs;

import hr.danisoka.bulkmailer.app.AppConstants;
import hr.danisoka.bulkmailer.app.contracts.SessionWinContract;
import hr.danisoka.bulkmailer.app.listeners.SessionListener;
import hr.danisoka.bulkmailer.app.loggers.MailLoggerHandler;
import hr.danisoka.bulkmailer.app.models.RawSessionData;
import hr.danisoka.bulkmailer.app.models.Session;
import hr.danisoka.bulkmailer.app.models.comboboxes.FileStringComboboxModel;
import hr.danisoka.bulkmailer.app.utils.FileUtils;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.io.File;
import java.text.SimpleDateFormat;
import java.util.List;
import java.util.Locale;
import javax.swing.ComboBoxModel;
import javax.swing.JComboBox;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;

public class SessionDialog extends javax.swing.JDialog implements SessionWinContract.View, MailLoggerHandler.LoggerErrorListener{

    public SessionDialog(java.awt.Frame parent, boolean modal, SessionListener listener) {
        super(parent, modal);
        initComponents();
        
        connectHolderTextboxesWithPreview();
        setupButtons();
        setupComboboxes();
        this.listener = listener;
    }
    
     public SessionDialog(java.awt.Frame parent, boolean modal, Session session, SessionListener listener) {
        initComponents();
        this.session = session;
        connectHolderTextboxesWithPreview();
        setupButtons();
        setupComboboxes();
        this.listener = listener;        
        btnSave.setText("Spremi");
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of
     * this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        lblSessionName = new javax.swing.JLabel();
        txtSessionName = new javax.swing.JTextField();
        btnUploadData = new javax.swing.JButton();
        lblStudentData = new javax.swing.JLabel();
        jcbxStudentData = new javax.swing.JComboBox<>();
        jSeparator1 = new javax.swing.JSeparator();
        lblEmailColumn = new javax.swing.JLabel();
        jcbxEmailColumn = new javax.swing.JComboBox<>();
        lblGroupColumn = new javax.swing.JLabel();
        jcbxGroupColumn = new javax.swing.JComboBox<>();
        lblGroupIndicator = new javax.swing.JLabel();
        jtbtnGroupIndicator = new javax.swing.JToggleButton();
        jSeparator2 = new javax.swing.JSeparator();
        btnTemplateUpload = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jcbxTemplateFile = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        txtHolderStart = new javax.swing.JTextField();
        lblHolderEnd = new javax.swing.JLabel();
        txtHolderEnd = new javax.swing.JTextField();
        btnSave = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        lblExample = new javax.swing.JLabel();
        lblHolderStartExample = new javax.swing.JLabel();
        lblHolderEndExample = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        java.awt.GridBagLayout layout = new java.awt.GridBagLayout();
        layout.columnWidths = new int[] {0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0};
        layout.rowHeights = new int[] {0, 10, 0, 10, 0, 10, 0, 10, 0, 10, 0, 10, 0, 10, 0, 10, 0, 10, 0, 10, 0, 10, 0, 10, 0, 10, 0, 10, 0, 10, 0};
        getContentPane().setLayout(layout);

        lblSessionName.setText("Naziv sesije:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        getContentPane().add(lblSessionName, gridBagConstraints);

        txtSessionName.setMinimumSize(new java.awt.Dimension(300, 20));
        txtSessionName.setPreferredSize(new java.awt.Dimension(300, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 11;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 6;
        gridBagConstraints.ipady = 6;
        getContentPane().add(txtSessionName, gridBagConstraints);

        btnUploadData.setText("Prijenos podataka studenata");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 6;
        getContentPane().add(btnUploadData, gridBagConstraints);

        lblStudentData.setText("Datoteka studenata: ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 6;
        getContentPane().add(lblStudentData, gridBagConstraints);

        jcbxStudentData.setEditable(true);
        jcbxStudentData.setMinimumSize(new java.awt.Dimension(300, 20));
        jcbxStudentData.setPreferredSize(new java.awt.Dimension(300, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 8;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 4;
        gridBagConstraints.ipady = 4;
        getContentPane().add(jcbxStudentData, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.gridwidth = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        getContentPane().add(jSeparator1, gridBagConstraints);

        lblEmailColumn.setText("Stupac za e-mail: ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        getContentPane().add(lblEmailColumn, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 3;
        gridBagConstraints.ipady = 3;
        getContentPane().add(jcbxEmailColumn, gridBagConstraints);

        lblGroupColumn.setText("Stupac za tim: ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 14;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        getContentPane().add(lblGroupColumn, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 14;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 3;
        gridBagConstraints.ipady = 3;
        getContentPane().add(jcbxGroupColumn, gridBagConstraints);

        lblGroupIndicator.setText("Timovi: ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 12;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        getContentPane().add(lblGroupIndicator, gridBagConstraints);

        jtbtnGroupIndicator.setText("NE");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 12;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 3;
        gridBagConstraints.ipady = 3;
        getContentPane().add(jtbtnGroupIndicator, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 20;
        gridBagConstraints.gridwidth = 13;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        getContentPane().add(jSeparator2, gridBagConstraints);

        btnTemplateUpload.setText("Prijenos predloška e-maila");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 18;
        getContentPane().add(btnTemplateUpload, gridBagConstraints);

        jLabel1.setText("Predložak e-maila: ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 18;
        getContentPane().add(jLabel1, gridBagConstraints);

        jcbxTemplateFile.setEditable(true);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 8;
        gridBagConstraints.gridy = 18;
        gridBagConstraints.gridwidth = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 4;
        gridBagConstraints.ipady = 4;
        getContentPane().add(jcbxTemplateFile, gridBagConstraints);

        jLabel2.setText("Početak placeholdera: ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 22;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        getContentPane().add(jLabel2, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 22;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 4;
        gridBagConstraints.ipady = 4;
        getContentPane().add(txtHolderStart, gridBagConstraints);

        lblHolderEnd.setText("Kraj placeholdera: ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 24;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        getContentPane().add(lblHolderEnd, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 24;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 4;
        gridBagConstraints.ipady = 4;
        getContentPane().add(txtHolderEnd, gridBagConstraints);

        btnSave.setText("Kreiraj");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 28;
        gridBagConstraints.ipadx = 5;
        gridBagConstraints.ipady = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        getContentPane().add(btnSave, gridBagConstraints);

        btnCancel.setText("Odustani");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 14;
        gridBagConstraints.gridy = 28;
        gridBagConstraints.ipadx = 5;
        gridBagConstraints.ipady = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        getContentPane().add(btnCancel, gridBagConstraints);

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        java.awt.GridBagLayout jPanel1Layout = new java.awt.GridBagLayout();
        jPanel1Layout.columnWidths = new int[] {0, 5, 0, 5, 0};
        jPanel1Layout.rowHeights = new int[] {0};
        jPanel1.setLayout(jPanel1Layout);

        lblExample.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblExample.setText("Poduzeće");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        jPanel1.add(lblExample, gridBagConstraints);

        lblHolderStartExample.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblHolderStartExample.setText("@@");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        jPanel1.add(lblHolderStartExample, gridBagConstraints);

        lblHolderEndExample.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblHolderEndExample.setText("@@");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        jPanel1.add(lblHolderEndExample, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 8;
        gridBagConstraints.gridy = 22;
        gridBagConstraints.gridwidth = 7;
        gridBagConstraints.gridheight = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        getContentPane().add(jPanel1, gridBagConstraints);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnTemplateUpload;
    private javax.swing.JButton btnUploadData;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JComboBox<String> jcbxEmailColumn;
    private javax.swing.JComboBox<String> jcbxGroupColumn;
    private javax.swing.JComboBox<String> jcbxStudentData;
    private javax.swing.JComboBox<String> jcbxTemplateFile;
    private javax.swing.JToggleButton jtbtnGroupIndicator;
    private javax.swing.JLabel lblEmailColumn;
    private javax.swing.JLabel lblExample;
    private javax.swing.JLabel lblGroupColumn;
    private javax.swing.JLabel lblGroupIndicator;
    private javax.swing.JLabel lblHolderEnd;
    private javax.swing.JLabel lblHolderEndExample;
    private javax.swing.JLabel lblHolderStartExample;
    private javax.swing.JLabel lblSessionName;
    private javax.swing.JLabel lblStudentData;
    private javax.swing.JTextField txtHolderEnd;
    private javax.swing.JTextField txtHolderStart;
    private javax.swing.JTextField txtSessionName;
    // End of variables declaration//GEN-END:variables

    private File csvFile;
    private File templateFile;
    private SessionWinContract.Controller controller;
    private List<String> studentsDataHeaders;
    private SessionListener listener;
    private boolean dataUploaded = false;
    private boolean templateUploaded = false;
    private Session session;
    private SessionDialog obj = this;
    private SimpleDateFormat sdf = new SimpleDateFormat("dd.MM.YYYY. HH:mm");
    
    public void setController(SessionWinContract.Controller controller) {
        this.controller = controller;
    }
    
    public void populateValues() {
        jcbxStudentData.setSelectedItem(FileUtils.extractFileName(new File(session.getDataFilePath())));
        jcbxTemplateFile.setSelectedItem(FileUtils.extractFileName(new File(session.getTemplateFilePath())));
        if(session.getEmailColumn() != null) {
            jcbxEmailColumn.setSelectedItem(session.getEmailColumn());
        } else {
            jcbxEmailColumn.setSelectedIndex(0);
        }
        if(session.getGroupColumn() != null) {
            jcbxGroupColumn.setSelectedItem(session.getGroupColumn());
        } else {
            jcbxGroupColumn.setSelectedIndex(0);
        }
        handleToggleButton(session.hasGroup());
        txtSessionName.setText(session.getName());

        updateHolderStart(session.getHolderStart());
        updateHolderEnd(session.getHolderEnd());
    }
    
    private void connectHolderTextboxesWithPreview() {
        lblHolderStartExample.setText(txtHolderStart.getText());
        lblHolderEndExample.setText(txtHolderEnd.getText());
        
        txtHolderStart.addKeyListener(new KeyAdapter() {
            @Override
            public void keyReleased(KeyEvent e) {
                String value = txtHolderStart.getText();
                lblHolderStartExample.setText(value);
            }            
        });
        
        txtHolderEnd.addKeyListener(new KeyAdapter() {
            @Override
            public void keyReleased(KeyEvent e) {
                String value = txtHolderEnd.getText();
                lblHolderEndExample.setText(value);
            }
        });
    }
    
    private void handleToggleButton(boolean value) {
        jtbtnGroupIndicator.setSelected(value);
        jtbtnGroupIndicator.setText(value ? "DA" :  "NE");
        if(!value && jcbxGroupColumn.getSelectedIndex() != 0) {
            jcbxGroupColumn.setSelectedIndex(0);
        }
    }
    
    private void setupButtons() {
        jtbtnGroupIndicator.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                boolean value = jtbtnGroupIndicator.isSelected();
                handleToggleButton(value);
            }
        });
        
        btnUploadData.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                handleCsvDataUpload();
            }
        });
        
        btnTemplateUpload.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                handleTemplateUpload();
            }
        });
        
        btnCancel.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                handleCancelDialog();
            }
        });
        
        btnSave.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                handleSaveDialog();
            }
        });
    }
    
    private void setupComboboxes() {
        populateCombobox(jcbxStudentData, AppConstants.AppSettings.Folders.CSV_FOLDER);
        populateCombobox(jcbxTemplateFile, AppConstants.AppSettings.Folders.TEMPLATES_FOLDER);
        jcbxStudentData.addItemListener(new ItemListener() {
            @Override
            public void itemStateChanged(ItemEvent e) {
                if(studentsDataHeaders == null || studentsDataHeaders.isEmpty()) {
                    FileStringComboboxModel model = (FileStringComboboxModel)jcbxStudentData.getModel();
                    File csv = model.getSelectedFileItem();
                    
                    studentsDataHeaders = controller.fetchHeadersFromStudentsData(csv);
                    handleCombobox(jcbxEmailColumn, studentsDataHeaders, "Nije odabrano");
                    handleCombobox(jcbxGroupColumn, studentsDataHeaders, "Nije odabrano");
                    
                    obj.controller.analyzeStudentData(csv);
                }
            }
        });
        jcbxTemplateFile.addItemListener(new ItemListener() {
            @Override
            public void itemStateChanged(ItemEvent e) {
                if(txtHolderStart.getText().isEmpty() || txtHolderEnd.getText().isEmpty()) {
                    FileStringComboboxModel model = (FileStringComboboxModel)jcbxTemplateFile.getModel();
                    File template = model.getSelectedFileItem();
                    obj.controller.analyzeTemplate(template);
                }
            }
        });
    }
    
    private void handleCsvDataUpload() {
        JFileChooser chooser = new JFileChooser();
        FileNameExtensionFilter filter = new FileNameExtensionFilter("CSV filter", "csv");
        chooser.setFileFilter(filter);
        chooser.setLocale(Locale.forLanguageTag("HR"));
        int outcome = chooser.showDialog(this, null);
        if(outcome == JFileChooser.APPROVE_OPTION) {
            csvFile = chooser.getSelectedFile();
            
            FileStringComboboxModel model = (FileStringComboboxModel)jcbxStudentData.getModel();
            model.insertFileItemAt(csvFile, 0);
            jcbxStudentData.setModel(model);
            jcbxStudentData.setSelectedIndex(0);
            
            studentsDataHeaders = controller.fetchHeadersFromStudentsData(csvFile);
            handleCombobox(jcbxEmailColumn, studentsDataHeaders, "Nije odabrano");
            handleCombobox(jcbxGroupColumn, studentsDataHeaders, "Nije odabrano");
            
            controller.analyzeStudentData(csvFile);
            dataUploaded = true;
        }
    }
    
    private void handleTemplateUpload() {
        JFileChooser chooser = new JFileChooser();
        FileNameExtensionFilter filter = new FileNameExtensionFilter("HTML filter", "html", "xhtml", "htm");
        chooser.setFileFilter(filter);
        chooser.setLocale(Locale.forLanguageTag("HR"));
        int outcome = chooser.showDialog(this, null);
        if(outcome == JFileChooser.APPROVE_OPTION) {
            templateFile = chooser.getSelectedFile();
            
            FileStringComboboxModel model = (FileStringComboboxModel)jcbxTemplateFile.getModel();
            model.insertFileItemAt(templateFile, 0);
            jcbxTemplateFile.setModel(model);
            jcbxTemplateFile.setSelectedIndex(0);
            
            controller.analyzeTemplate(templateFile);
            templateUploaded = true;
        }
    } 
    
    private void handleCancelDialog() {
        this.setVisible(false);
    }
    
    private void handleSaveDialog() {
        FileStringComboboxModel studentFileModel = (FileStringComboboxModel)jcbxStudentData.getModel();
        FileStringComboboxModel templateFileModel = (FileStringComboboxModel)jcbxTemplateFile.getModel();
        
        RawSessionData sessionData = new RawSessionData();
        String sessionName = txtSessionName.getText() != null && !txtSessionName.getText().isEmpty() ? txtSessionName.getText() : String.format("Sesija kreirana %s", sdf.format(session.getCreatedAt()));
        sessionData.setName(sessionName);
        sessionData.setDataFile(csvFile == null ? studentFileModel.getSelectedFileItem() : csvFile, jcbxStudentData.getSelectedItem().toString());
        sessionData.setEmailColumn(jcbxEmailColumn.getSelectedIndex() == 0 ? null : jcbxEmailColumn.getSelectedItem().toString());
        sessionData.setGrouped(jtbtnGroupIndicator.isSelected());
        sessionData.setGroupColumn(jcbxGroupColumn.getSelectedIndex() == 0 ? null : jcbxGroupColumn.getSelectedItem().toString());
        sessionData.setTemplateFile(templateFile== null ? templateFileModel.getSelectedFileItem() : templateFile, jcbxTemplateFile.getSelectedItem().toString());
        sessionData.setHolder(txtHolderStart.getText(), txtHolderEnd.getText());
        sessionData.setDataUploaded(dataUploaded);
        sessionData.setTemplateUploaded(templateUploaded);
        controller.createOrUpdateSession(sessionData, session);
    }
    
    private void handleCombobox(JComboBox cbx, List<String> items, String initialItem) {
        cbx.removeAllItems();
        if(initialItem != null) {
            cbx.addItem(initialItem);
        }
        for(String item : items) {
            cbx.addItem(item);
        }
    }

    @Override
    public void updateEmailColumnCombobox(String selectedValue) {
        jcbxEmailColumn.setSelectedItem(selectedValue);
    }

    @Override
    public void updateGroupColumnCombobox(String selectedValue) {
        jcbxGroupColumn.setSelectedItem(selectedValue);
    }

    @Override
    public void updateGroupIndicator(boolean value) {
        handleToggleButton(value);
    }

    @Override
    public void updateHolderStart(String value) {
        txtHolderStart.setText(value);
        lblHolderStartExample.setText(txtHolderStart.getText());
    }

    @Override
    public void updateHolderEnd(String value) {
        txtHolderEnd.setText(value);
        lblHolderEndExample.setText(txtHolderEnd.getText());
    }

    @Override
    public void sessionCreated(Session session) {
        if(listener != null) {
            listener.onSessionCreated(session);
        }
        JOptionPane.showMessageDialog(this, "Nova sesija za skupni e-mail je kreirana.", "Obavijest", JOptionPane.INFORMATION_MESSAGE);
        this.setVisible(false);
    }

    @Override
    public void sessionUpdated(Session session) {
        if(listener != null) {
            listener.onSessionUpdated(session);
        }
        JOptionPane.showMessageDialog(this, String.format("Sesija '%s' je uspješno ažurirana.", session.getName()), "Obavijest", JOptionPane.INFORMATION_MESSAGE);
        this.setVisible(false);
    }  

    @Override
    public void onErrorOccurred(Exception ex, String message) {
        JOptionPane.showMessageDialog(this, message, "Greška!", JOptionPane.ERROR_MESSAGE);
    }
    
    private void populateCombobox(JComboBox cmbox, String dirPath) {
        File dir = FileUtils.getDirectory(dirPath);
        File[] dirContent = dir.listFiles();
        
        ComboBoxModel<String> model = new FileStringComboboxModel(dirContent, FileStringComboboxModel.convertToStringArray(dirContent));
        cmbox.setModel(model);
        cmbox.setSelectedIndex(-1);
    }
    
}
