package hr.danisoka.bulkmailer.app.views.windows.dialogs;

import hr.danisoka.bulkmailer.app.loggers.MailLoggerHandler;
import hr.danisoka.bulkmailer.app.models.Session;
import hr.danisoka.bulkmailer.app.models.attempts.AttemptJson;
import hr.danisoka.bulkmailer.app.utils.AttemptUtils;
import hr.danisoka.bulkmailer.app.views.windows.panels.SessionAttemptContainerPanel;
import java.awt.Dimension;
import java.io.IOException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.Box;
import javax.swing.JOptionPane;

public class SessionAttemptsDialog extends javax.swing.JDialog implements MailLoggerHandler.LoggerErrorListener{

    public SessionAttemptsDialog(java.awt.Frame parent, boolean modal, Session session) {
        super(parent, modal);
        initComponents();
        this.session = session;
        populateSessionAttempts();
        this.setTitle(this.session.getName());
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of
     * this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jpScrollPane = new javax.swing.JScrollPane();
        jpAttemptsPanel = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(600, 600));
        setModal(true);
        setPreferredSize(new java.awt.Dimension(600, 600));
        getContentPane().setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 10, 10));

        jpAttemptsPanel.setLayout(new javax.swing.BoxLayout(jpAttemptsPanel, javax.swing.BoxLayout.Y_AXIS));
        jpScrollPane.setViewportView(jpAttemptsPanel);

        getContentPane().add(jpScrollPane);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jpAttemptsPanel;
    private javax.swing.JScrollPane jpScrollPane;
    // End of variables declaration//GEN-END:variables

    private Session session;
    private MailLoggerHandler.LoggerErrorListener errorListener = this;
    
    private void populateSessionAttempts() {
        try {
            List<AttemptJson> attempts = AttemptUtils.getAllAttempts(session);
            int width = this.getWidth() - 20;
            int height = this.getHeight() - 20;
            jpScrollPane.setPreferredSize(new Dimension(width, height));
            jpAttemptsPanel.setPreferredSize(new Dimension(width, height));
            for(AttemptJson attempt : attempts) {
                SessionAttemptContainerPanel attemptPanel = new SessionAttemptContainerPanel(attempt);
                attemptPanel.setVisible(true);
                jpAttemptsPanel.add(Box.createRigidArea(new Dimension(0, 14)));
                jpAttemptsPanel.add(attemptPanel);
                jpAttemptsPanel.revalidate();
            }
            jpAttemptsPanel.add(Box.createRigidArea(new Dimension(0, 14)));
            jpAttemptsPanel.revalidate();
        } catch (IOException ex) {
            Logger.getLogger(SessionAttemptsDialog.class.getName()).log(Level.SEVERE, null, ex);
            if(errorListener != null) {
                errorListener.onErrorOccurred(ex, ex.getMessage());
            }
        }
    }

    @Override
    public void onErrorOccurred(Exception ex, String message) {
        JOptionPane.showMessageDialog(this, message, "Gre≈°ka!", JOptionPane.ERROR_MESSAGE);
    }
}
